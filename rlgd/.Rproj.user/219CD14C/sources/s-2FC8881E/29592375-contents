#
rm(list=ls())

#g?n?ration des donn?es
n <- 10000000
x <- rnorm(n)
y <- 2*x+1+rnorm(n,sd=1)

#r?gression
print("Coefficients et temps de calcul pour lm")
print(system.time(coef_lm <- lm(y ~ x)))
print(coef_lm$coefficients)

#gradient
gradient_simple <- function(x,y,eta=0.5,max_iter=100,tol=1e-4){
  #coefficients - val. de d?part
  coef <- runif(2)
  #it?rer
  iter <- 0
  converge <- FALSE
  #initialisation du gradient pour r?server la variable
  gradient <- c(0.0,0.0)
  while ((iter < max_iter) && (converge == FALSE)){
    #it?ration suivante
    iter <- iter +1
    #valeur pr?dite par le mod?le (coef.)
    pred <- coef[1]+coef[2]*x
    #ecart
    ecart <- y - pred
    #gradient
    gradient[1] <- mean(ecart)
    gradient[2] <- mean(x*ecart)
    #valeur suivante des coefs
    coefBis <- coef + eta * gradient
    #v?rification
    if (sum(abs(coefBis-coef)) < tol){
      converge <- TRUE
    }
    coef <- coefBis
  }
  return(list(coef=coef,nbIter=iter))
}

print("")
print("Coefficients et temps de calcul pour descente gradient")
print(system.time(coef_grad <- gradient_simple(x,y,eta=1.0)))
print(coef_grad)
